good_teacher::{T: teacher}
P(gt(t) = True | q(t) = True) = 0.7
P(gt(t) = True | q(t) = False) = 0.4
P(gt(t) = True) =  0.4 * 0.7 + 0.6 * 0.4

illness::{X: student}
0.05

attends::{X: student}
!illness(x) & ||good_teacher(t) > 0.5 ||_t : 0.9
!illness(x) & ||good_teacher(t) <= 0.5 ||_t : 0.8
illness(x) : 0.1

P(A(x) = True) = 0.1 * P(i(x) = True)
P(A(x) = True | i(x) = False & gt > 2) = 0.9
P(A(x) = Ture| i(x) = False & gt <= 2) = 0.8

Q1: which redundancy should be better to change?
A-> B -> C -> D

alternative:
use pgmpy create sub network and calucate the probability.
but is that necessary?

good_grade::{X: student}
||good_teacher(t) > 0.5||_t : 0.4
||good_teacher(t) <= 0.5||_t : 0.2

good_school::{}
||attends(x) >= 0.95||_x & ||good_grade(x) >= 0.30||_x : 0.95
||attends(x) < 0.95||_x & ||good_grade(x) >= 0.30||_x : 0.9
||attends(x) >= 0.95||_x & ||good_grade(x) < 0.30||_x : 0.8
||attends(x) < 0.95||_x & ||good_grade(x) < 0.30||_x : 0.3
